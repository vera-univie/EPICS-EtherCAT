
# template generated by maketemplate.py 
# from XML files at ../xml/
# for device EL3681 revision 0x150000 
# non-default pdo assignments: None
#
# % macro, DEVICE, device name
# % macro, PORT,   asyn port for device
# % macro, SCAN,   scan rate


record(mbbi, "$(DEVICE):AL_STATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AL_STATE")
  field("SCAN", "$(SCAN)")
  field("ONVL", "1")
  field("TWVL", "2")
  field("THVL", "4")
  field("FRVL", "8")
  field("ONST", "INIT")
  field("TWST", "PREOP")
  field("THST", "SAFEOP")
  field("FRST", "OP")
}


record(longin, "$(DEVICE):ERROR_FLAG")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ERROR_FLAG")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):SAIINPUTS:VALUE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Value")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):SAIFEEDBACK:SETTINGS__MODE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIFeedback.Settings__Mode")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):SAIFEEDBACK:SETTINGS__RANGE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIFeedback.Settings__Range")
  field("SCAN", "$(SCAN)")
}


record(bi, "$(DEVICE):SAIINPUTS:SUNDERRANGE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__Underrange")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:SOVERRANGE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__Overrange")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:STATUS__EXTENDEDRANGE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__Extendedrange")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:STATUS__DATAINVALID")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__Datainvalid")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:STATUS__RANGEINVALID")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__Rangeinvalid")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:STATUS__AUTORANGEDISABLED")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__Autorangedisabled")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:SERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__Error")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:STATUS__CALIBRATIONINPROGRESS")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__Calibrationinprogress")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:STXPDOSTATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__TxPDOState")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):SAIINPUTS:STXPDOTOGGLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))SAIInputs.Status__TxPDOToggle")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(longout, "$(DEVICE):SAIRANGE:CONTROL__MODE")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))SAIRange.Control__Mode")
  field("OMSL", "supervisory")
}


record(longout, "$(DEVICE):SAIRANGE:CONTROL__RANGE")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))SAIRange.Control__Range")
  field("OMSL", "supervisory")
}


record(bo, "$(DEVICE):SAIRANGE:CONTROL__DISABLEAUTORANGE")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))SAIRange.Control__Disableautorange")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):SAIRANGE:CONTROL__STARTCALIBRATION")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))SAIRange.Control__Startcalibration")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}

