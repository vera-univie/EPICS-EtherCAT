
# template generated by maketemplate.py 
# from XML files at ../xml/
# for device EL1502 revision 0x100000 
# non-default pdo assignments: None
#
# % macro, DEVICE, device name
# % macro, PORT,   asyn port for device
# % macro, SCAN,   scan rate


record(mbbi, "$(DEVICE):AL_STATE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))AL_STATE")
  field("SCAN", "$(SCAN)")
  field("ONVL", "1")
  field("TWVL", "2")
  field("THVL", "4")
  field("FRVL", "8")
  field("ONST", "INIT")
  field("TWST", "PREOP")
  field("THST", "SAFEOP")
  field("FRST", "OP")
}


record(longin, "$(DEVICE):ERROR_FLAG")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))ERROR_FLAG")
  field("SCAN", "$(SCAN)")
}


record(longin, "$(DEVICE):CNTINPUTS:COUNTERVALUE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Countervalue")
  field("SCAN", "$(SCAN)")
}


record(bi, "$(DEVICE):CNTINPUTS:OUTPUTFUNCTIONSENABLED")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Outputfunctionsenabled")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:STATUSOFOUTPUT")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Statusofoutput")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:SETCOUNTERDONE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Setcounterdone")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:COUNTERINHIBITED")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Counterinhibited")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:STATUSOFINPUTUD")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.StatusofinputUD")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:STATUSOFINPUTCLOCK")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.Statusofinputclock")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:SYNCERROR")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.SyncError")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bi, "$(DEVICE):CNTINPUTS:TXPDOTOGGLE")
{
  field("DTYP", "asynInt32")
  field("INP",  "@asyn($(PORT))CNTInputs.TxPDOToggle")
  field("SCAN", "$(SCAN)")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(longout, "$(DEVICE):CNTOUTPUTS:SET")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Setcountervalue")
  field("OMSL", "supervisory")
}


record(bo, "$(DEVICE):CNTOUTPUTS:ENABLEOUTPUTFUNCTIONS")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Enableoutputfunctions")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):CNTOUTPUTS:SETOUTPUT")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Setoutput")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):CNTOUTPUTS:SETCOUNTER")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Setcounter")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}


record(bo, "$(DEVICE):CNTOUTPUTS:INHIBITCOUNTER")
{
  field("DTYP", "asynInt32")
  field("OUT",  "@asyn($(PORT))CNTOutputs.Inhibitcounter")
  field("OMSL", "supervisory")
  field("ZNAM", "OFF")
  field("ONAM", "ON")
}

